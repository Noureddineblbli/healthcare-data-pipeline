# -----------------------------------------------------------------------------
# DOCKER COMPOSE PROJECT CONFIGURATION
#
# Instructions:
# 1. Copy this file to a new file named '.env'
# 2. Replace the placeholder values with your actual desired configuration.
# 3. The '.env' file should NOT be committed to version control.
# -----------------------------------------------------------------------------

# --- General ---
# Used by Docker Compose to name the project and its resources (containers, networks, volumes)
COMPOSE_PROJECT_NAME=healthcare_pipeline

# --- Port Mapping ---
# Expose service UIs on these host ports to avoid conflicts.
AIRFLOW_UI_PORT=8080
SPARK_MASTER_UI_PORT=8081
NIFI_UI_PORT=8181
POSTGRES_PORT=5432

# -----------------------------------------------------------------------------
# POSTGRESQL DATABASE SETTINGS
# Credentials for the Airflow metadata database.
# These values are used to initialize the database and for Airflow services to connect.
# -----------------------------------------------------------------------------
POSTGRES_USER=airflow
POSTGRES_PASSWORD=changeme_in_env
POSTGRES_DB=airflow

# -----------------------------------------------------------------------------
# AIRFLOW CORE SETTINGS
# These variables configure the core behavior of Airflow.
# -----------------------------------------------------------------------------
# The executor controls how tasks are run. LocalExecutor runs tasks in parallel on a single machine.
AIRFLOW__CORE__EXECUTOR=LocalExecutor

# A unique, complex key to secure web sessions. Generate a secure key for production.
# You can generate one with: python -c 'import secrets; print(secrets.token_hex(16))'
AIRFLOW__WEBSERVER__SECRET_KEY=changeme_in_env_to_a_long_random_string

# Set the default Airflow user credentials. This user is created by the airflow-init service.
AIRFLOW_UID=50000
AIRFLOW_USER_NAME=admin
AIRFLOW_USER_PASSWORD=admin
AIRFLOW_USER_EMAIL=admin@example.com


# -----------------------------------------------------------------------------
# NIFI SETTINGS
# Configuration for the Apache NiFi data ingestion service.
# For a simple setup, only the port is needed. For production, consider enabling authentication.
# -----------------------------------------------------------------------------
# The internal HTTP port NiFi listens on inside the container.
NIFI_WEB_HTTP_PORT=8080
# NIFI_USERNAME=admin # Uncomment and set for a secure setup
# NIFI_PASSWORD=changeme_in_env_nifi_password # Uncomment and set for a secure setup

# -----------------------------------------------------------------------------
# SPARK SETTINGS
# Configuration for the Apache Spark processing engine.
# -----------------------------------------------------------------------------
# The mode for this Spark container. 'master' for a master node.
SPARK_MODE=master
# The version of Spark to use. Should match the image tag in docker-compose.yml.
SPARK_VERSION=3.5
# Disables security features for simpler local development. Set to 'yes' for production.
SPARK_RPC_AUTHENTICATION_ENABLED=no
SPARK_RPC_ENCRYPTION_ENABLED=no